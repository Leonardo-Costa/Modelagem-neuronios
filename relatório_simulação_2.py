# -*- coding: utf-8 -*-
"""Relatório_Simulação_2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AHVYW_TIZZMY754H3M5_cRxP6DA2t9C1
"""

import numpy as np
import math
import random
from matplotlib import pyplot as plt
from tqdm import tqdm

def H(v):
  return 1 if v >= 0 else 0
  
def ShowData(content, t=0.5):
  fig = plt.figure("Degree of a random graph", figsize=(10, 10))
  axgrid = fig.add_gridspec(3, 2)

  ax1 = fig.add_subplot(axgrid[0, 0:])
  ax1.set_title('Oscilação de neurônios')
  ax1.set_xlabel('tempo')
  ax1.set_ylabel('Excitação do neurônio')
  for i in range(len(content)):
    ax1.plot(content[i])

  discretizado = []

  for i in range(len(content)):
    discretizado.append([])
    for j in range(len(content[i])):
      discretizado[i].append(1 + 0.1 * i if content[i][j] > t else None)
  ax2 = fig.add_subplot(axgrid[1, 0:])
  for i in range(len(content)):
    ax2.scatter(list(range(len(discretizado[i]))), discretizado[i])
  plt.show()

def Simulate(DT=0.01, Tmax=1000, neurons=5, t=0.5, w=0.3, e=0.02, a=6, B=0.1, p=0, I=0.1, o=15, seed=10):
  random.seed(seed)
  # Variáveis
  x = []
  y = []

  # Listas para plot
  lx = []
  ly = []

  dx = []
  dy = []
  S = [] #acoplamento

  for i in range(neurons):
    x.append(round(random.uniform(-2, 0.4), 2))
    y.append(round(random.uniform(0, 4), 2))
    dx.append(0)
    dy.append(0)
    lx.append([])
    ly.append([])
    S.append(0)

  iterations = int(Tmax / DT)

  for i in tqdm(range(iterations)):
    for j in range(neurons):
      S[j] = w * (H(x[(j + 1) % neurons] - t) + H(x[(j - 1) % neurons] - t))
    for k in range(neurons):
      dx[k] = (3 * x[k] - x[k] ** 3 + 2 - y[k] + I + p + S[k] ) * DT
      dy[k] = (e * ( a * ( 1 + math.tanh(x[k] / B)) - y[k])) * DT

      if i % o == 0:
        lx[k].append(round(x[k], 4))

      x[k] += dx[k]
      y[k] += dy[k]
  
  return lx

"""##Cálculos"""

ShowData(Simulate(neurons=20, Tmax=5000, w=0.01))
ShowData(Simulate(neurons=20, Tmax=5000, w=0.02))